classdef FEMTool < HandlePlus
    
    % rcs
    
	properties
        
        uieDoseNum
        uieFocusNum
        uiePositionStartX
        uiePositionStepX
        uiePositionStartY
        uiePositionStepY
        uitPositionRangeX
        uitPositionRangeY
        
        uieDoseCenter
        uieDoseStep
        uipDoseStepType
        uitDoseRange
        
        uieFocusCenter
        uieFocusStep
        uieFocusStepTol
        uitFocusRange
        
        uiePausePreExp
        uiePausePreHS
        uiePauseHSMove
        
        dFocus              % size: [1 x n]
        dDose               % size: [1 x m]
        dX                  % size: [1 x m]
        dY                  % size: [1 x n]        
        
    end
    
    properties (SetAccess = private)
        
        dWidth              = 450;
        dHeight             = 340;
    
    end
    
    properties (Access = private)
                      
        hPanel
        hPanelPos
        hPanelDose
        hPanelFocus
        hPanelPause
        
        
        dWidthPosition      = 140;
        dHeightPosition     = 210;
        dWidthDose          = 275;
        dHeightDose         = 100;
        dWidthFocus         = 275;
        dHeightFocus        = 100;
        dWidthPause         = 275;
        dHeightPause        = 80;
        
        uibMatrix
                
    end
    
        
    events
        
        eSizeChange
        
    end
    

    
    methods
        
        
        function this = FEMTool()
            
            this.init();
            
        end
        
                
        function build(this, hParent, dLeft, dTop)
                        
            
            this.hPanel = uipanel(...
                'Parent', hParent,...
                'Units', 'pixels',...
                'Title', 'FEM',...
                'Clipping', 'on',...
                'Position', Utils.lt2lb([dLeft dTop this.dWidth this.dHeight], hParent) ...
            );        
            
			drawnow;
            
            dPadX = 10;
            dTop = 20;
            dSep = 10;
                        
        
            this.hPanelDose = uipanel(...
                'Parent', this.hPanel,...
                'Units', 'pixels',...
                'Title', 'Dose (mJ/cm2)',...
                'Clipping', 'on',...
                'Position', Utils.lt2lb([ ...
                    dPadX ...
                    dTop ...
                    this.dWidthDose ...
                    this.dHeightDose], this.hPanel) ...
            );
        
            this.hPanelFocus = uipanel(...
                'Parent', this.hPanel,...
                'Units', 'pixels',...
                'Title', 'Focus (nm)',...
                'Clipping', 'on',...
                'Position', Utils.lt2lb([ ...
                    dPadX ...
                    dTop + this.dHeightDose + dSep ...
                    this.dWidthFocus ...
                    this.dHeightFocus], this.hPanel) ...
            );
        
        
            this.hPanelPause = uipanel(...
                'Parent', this.hPanel,...
                'Units', 'pixels',...
                'Title', 'Pause (s)',...
                'Clipping', 'on',...
                'Position', Utils.lt2lb([ ...
                    dPadX ...
                    dTop + this.dHeightDose + dSep + this.dHeightFocus + dSep ...
                    this.dWidthPause ...
                    this.dHeightPause], this.hPanel) ...
            );
        
            this.hPanelPos = uipanel(...
                'Parent', this.hPanel,...
                'Units', 'pixels',...
                'Title', 'Position (mm)',...
                'Clipping', 'on',...
                'Position', Utils.lt2lb([ ...
                    dPadX + this.dWidthDose + dPadX ...
                    dTop ...
                    this.dWidthPosition ...
                    this.dHeightPosition], this.hPanel) ...
            );
        
        
            
            drawnow;
            
            % Size panel is two-col
            
            dPadX = 10;
            dEditWidth = 50;
            dWidthPopup = 80;
            dTop = 20;
            dSep = 55;
            
            % Dose Panel
            
            this.uieDoseNum.build( ...
                this.hPanelDose, ...
                dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            this.uieDoseCenter.build( ...
                this.hPanelDose, ...
                dPadX + dEditWidth + dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            this.uieDoseStep.build( ...
                this.hPanelDose, ...
                dPadX + dEditWidth + dPadX + dEditWidth + dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            this.uipDoseStepType.build( ...
                this.hPanelDose, ...
                dPadX + dEditWidth + dPadX + dEditWidth + dPadX + dEditWidth + dPadX, ...
                dTop, ...
                dWidthPopup, ...
                Utils.dEDITHEIGHT ...
            );
        
            dTop = dTop + dSep;
            
            this.uitDoseRange.build( ...
                this.hPanelDose, ...
                dPadX, ...
                dTop, ...
                dEditWidth + dPadX + dEditWidth + dPadX + dEditWidth + dPadX + dWidthPopup, ...
                Utils.dTEXTHEIGHT ...
            );
        
        
            % Focus panel
            
            dTop = 20;
            
            this.uieFocusNum.build( ...
                this.hPanelFocus, ...
                dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            this.uieFocusCenter.build( ...
                this.hPanelFocus, ...
                dPadX + dEditWidth + dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            this.uieFocusStep.build( ...
                this.hPanelFocus, ...
                dPadX + dEditWidth + dPadX + dEditWidth + dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            this.uieFocusStepTol.build( ...
                this.hPanelFocus, ...
                dPadX + dEditWidth + dPadX + dEditWidth + dPadX + dEditWidth + dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            dTop = dTop + dSep;
            
            this.uitFocusRange.build( ...
                this.hPanelFocus, ...
                dPadX, ...
                dTop, ...
                dEditWidth + dPadX + dEditWidth + dPadX + dEditWidth, ...
                Utils.dTEXTHEIGHT ...
            );
        
            % Pause Panel
        
            dTop = 20;
            this.uiePausePreExp.build( ...
                this.hPanelPause, ...
                dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            
            this.uiePausePreHS.build( ...
                this.hPanelPause, ...
                dPadX + dEditWidth + dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            
            this.uiePauseHSMove.build( ...
                this.hPanelPause, ...
                dPadX + dEditWidth + dPadX + dEditWidth + dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            
            
            % Position panel
            
            this.uiePositionStartX.build( ...
                this.hPanelPos, ...
                dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            this.uiePositionStartY.build( ...
                this.hPanelPos, ...
                2*dPadX + dEditWidth, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
        
            dTop = dTop + dSep;
            
            this.uiePositionStepX.build( ...
                this.hPanelPos, ...
                dPadX, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            this.uiePositionStepY.build( ...
                this.hPanelPos, ...
                2*dPadX + dEditWidth, ...
                dTop, ...
                dEditWidth, ...
                Utils.dEDITHEIGHT ...
            );
        
            dTop = dTop + dSep - 5;
            
            this.uitPositionRangeX.build( ...
                this.hPanelPos, ...
                dPadX, ...
                dTop, ...
                dEditWidth + dEditWidth + dPadX, ...
                Utils.dTEXTHEIGHT ...
            );
        
            dTop = dTop + 20;
            
            this.uitPositionRangeY.build( ...
                this.hPanelPos, ...
                dPadX, ...
                dTop, ...
                dEditWidth + dEditWidth + dPadX, ...
                Utils.dTEXTHEIGHT ...
            );
        
            % Print button
              
            dSep = 10;
            
            this.uibMatrix.build( ...
                this.hPanel, ...
                dPadX + this.dWidthDose + dPadX, ...
                dSep + this.dHeightPosition + 2*dSep, ...
                100, ...
                30 ...
            );
        
            
        
            
        
            
        end
        
                        
        
        %% Destructor
        
        function delete(this)
            
            % Clean up clock tasks
                        
        end
                    

    end
    
    methods (Access = private)
        
        function init(this)
                        
            this.uiePositionStartX         = UIEdit('Start X', 'd');
            this.uiePositionStartY         = UIEdit('Start Y', 'd');
            this.uiePositionStepX          = UIEdit('Step X', 'd');
            this.uiePositionStepY          = UIEdit('Step Y', 'd');
            this.uitPositionRangeX      = UIText('x: [,]');
            this.uitPositionRangeY      = UIText('y: [,]');
            
            this.uieDoseNum         = UIEdit('Num', 'u8');
            this.uieDoseCenter      = UIEdit('Center', 'd');
            this.uieDoseStep        = UIEdit('Step', 'd');
            this.uipDoseStepType    = UIPopup({'%-exp', 'Linear'}, 'Step Type', true);
            this.uitDoseRange       = UIText('Range: []');
            
            this.uieFocusNum        = UIEdit('Num', 'u8');
            this.uieFocusCenter     = UIEdit('Center', 'd');
            this.uieFocusStep       = UIEdit('Step', 'd');
            this.uieFocusStepTol    = UIEdit('Tol', 'd');
            this.uitFocusRange      = UIText('Range: []');
            
            this.uiePausePreExp     = UIEdit('Pre-exp', 'd');
            this.uiePausePreHS      = UIEdit('Pre-HS', 'd');
            this.uiePauseHSMove     = UIEdit('HS Move', 'd');
            
            this.uibMatrix          = UIButton('Print Matrix');
            
            
            addlistener(this.uieDoseNum, 'eChange', @this.handleSize);
            addlistener(this.uieFocusNum, 'eChange', @this.handleSize);
            addlistener(this.uiePositionStartX, 'eChange', @this.handleSize);
            addlistener(this.uiePositionStartY, 'eChange', @this.handleSize);
            addlistener(this.uiePositionStepX, 'eChange', @this.handleSize);
            addlistener(this.uiePositionStepY, 'eChange', @this.handleSize);
            
            addlistener(this.uieDoseCenter, 'eChange', @this.handleDose);
            addlistener(this.uieDoseStep, 'eChange', @this.handleDose);
            addlistener(this.uipDoseStepType, 'eChange', @this.handleDose); 
            
            addlistener(this.uieFocusCenter, 'eChange', @this.handleFocus);
            addlistener(this.uieFocusStep, 'eChange', @this.handleFocus);
            
            addlistener(this.uibMatrix, 'eChange', @this.handleMatrix);
            
            % Defaults
            this.uieDoseNum.setVal(uint8(9));
            this.uieFocusNum.setVal(uint8(7));
            this.uiePositionStartX.setVal(-5);
            this.uiePositionStartY.setVal(0);
            this.uiePositionStepX.setVal(2);
            this.uiePositionStepY.setVal(-2);
            this.uieDoseCenter.setVal(15);
            this.uieDoseStep.setVal(0.05);
            this.uieFocusCenter.setVal(0);
            this.uieFocusStep.setVal(10);
            this.uieFocusStepTol.setVal(2);
            
            this.uiePausePreExp.setVal(2.5);
            this.uiePausePreHS.setVal(1);
            this.uiePauseHSMove.setVal(3.5);
            
                        
        end
        
        function handleMatrix(this, ~, ~)
           
            
            fprintf('\nFEM: [%1d, %1d]\n', length(this.dDose), length(this.dFocus));
            for k = 1:length(this.dY)
                for l = 1:length(this.dX)
                   fprintf('%1.2f, %1.0f \t', this.dDose(l), this.dFocus(k));
                end
                
                fprintf('\n');
            end
            
        end
        
        function handleCloseRequestFcn(this, src, evt)
           
        end
        
        function handleSize(this, ~, ~)
            
            % this.msg('handleSize');
            
            this.updateSize();
            this.updateDose();
            this.updateFocus();
        end
        
        function handleDose(this, ~, ~)
            this.updateDose();
        end
        
        function handleFocus(this, ~, ~)
            this.updateFocus();
        end
        
        function updateSize(this)
            
            % this.msg('updateSize');
            
            this.dX = this.uiePositionStartX.val() : this.uiePositionStepX.val(): this.uiePositionStartX.val() + (double(this.uieDoseNum.val()) - 1)*this.uiePositionStepX.val();
            this.dY = this.uiePositionStartY.val() : this.uiePositionStepY.val(): this.uiePositionStartY.val() + (double(this.uieFocusNum.val()) - 1)*this.uiePositionStepY.val();
             
            if ~isempty(this.dX)
                this.uitPositionRangeX.cVal = sprintf( ...
                    'x: [%1.1f, %1.1f]', ...
                    this.dX(1), ...
                    this.dX(end) ...
                );
            else 
                this.uitPositionRangeY.cVal = 'x: [,]';
            end
            
            if ~isempty(this.dY)
        
                this.uitPositionRangeY.cVal = sprintf( ...
                    'y: [%1.1f, %1.1f]', ...
                    this.dY(1), ...
                    this.dY(end) ...
                ); 
            else 
                this.uitPositionRangeY.cVal = 'y: [,]';
            end
            
            [dXGrid, dYGrid] = meshgrid(this.dX*1e-3, this.dY*1e-3);
            
            stData = struct();
            stData.dX = dXGrid;
            stData.dY = dYGrid;
            notify(this, 'eSizeChange', EventWithData(stData));
            
        end
        
        
        function updateFocus(this)
            
            % relative factor:
            % Even: for 6 do -2 -1 0 1 2 3
            % Odd:  for 7 do -3 -2 -1 0 1 2 3
            
            % this.msg('updateFocus');
            
            dRelFactor = double(1:this.uieFocusNum.val()) - double(ceil(this.uieFocusNum.val()/2));
            this.dFocus = this.uieFocusCenter.val() + this.uieFocusStep.val()*dRelFactor;
            
            if ~isempty(this.dFocus)
                this.uitFocusRange.cVal = sprintf( ...
                    'Range: %1.0f nm to %1.0f nm', ...
                    this.dFocus(1), ...
                    this.dFocus(end) ...
                );
            else 
               this.uitFocusRange.cVal = 'Range:'; 
            end
        
        end
        
        
        function updateDose(this)
            
            % Even: for 6 do -2 -1 0 1 2 3
            % Odd:  for 7 do -3 -2 -1 0 1 2 3
            
            % this.msg('updateDose');
            
            dRelFactor = double(1:this.uieDoseNum.val()) - double(ceil(this.uieDoseNum.val()/2));
            
            switch this.uipDoseStepType.u8Selected
                case uint8(1)
                    % Exponential (test) another change
                    this.dDose = this.uieDoseCenter.val()*(1 + this.uieDoseStep.val()).^dRelFactor;
                    
                case uint8(2)
                    % Linear
                    this.dDose = this.uieDoseCenter.val() + this.uieDoseStep.val()*dRelFactor;
                    
            end
            
            if ~isempty(this.dDose)
                this.uitDoseRange.cVal = sprintf( ...
                    'Range: %1.2f to %1.2f mJ/cm2', ...
                    this.dDose(1), ...
                    this.dDose(end) ...
                );
            else
               this.uitDoseRange.cVal = 'Range:'; 
            end
            
   
            
            
        end
        
        
        

    end % private
    
    
end